{"version":3,"sources":["hooks/useTokenBalance.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useApprove.ts","components/Input/Input.tsx","views/MoneyWheel/components/Hero.tsx","views/MoneyWheel/components/WheelCard.tsx","views/MoneyWheel/components/TokenInput.tsx","views/MoneyWheel/components/BetInput.tsx","hooks/useBetMoneyWheel.ts","views/MoneyWheel/components/ConfirmBetModal.tsx","views/MoneyWheel/components/BetActions.tsx","hooks/useAllowance.ts","views/MoneyWheel/components/BetCard.tsx","views/MoneyWheel/MoneyWheel.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","account","ethereum","fastRefresh","getTokenBalance","res","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","useApprove","lpContract","dispatch","useDispatch","masterChefContract","useMasterchef","onApprove","useCallback","approve","tx","fetchFarmUserDataAsync","useMoneyWheelApprove","useCake","moneyWheelContract","useMoneyWheel","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","value","name","type","Title","Heading","attrs","as","secondary","StyledHero","Text","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","Hero","TranslateString","useI18n","wheelOptions","option","CardHeading","Left","IconWrapper","ExpandingWrapper","showFooter","WheelCard","prizeNumber","mustSpin","onStopping","style","padding","mustStartSpinning","data","backgroundColors","textColors","innerRadius","radiusLineWidth","perpendicularText","textDistance","onStopSpinning","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","span","max","symbol","onSelectMax","depositFeeBP","onClick","times","toString","FlexShow","BetInput","betNumber","color","mb","textAlign","placeBet","bet","val1","multipliedBy","pow","val3","val5","val10","val20","val50","isNaN","send","from","on","transactionHash","getLastResult","lastResult","useBetMoneyWheel","onBetMoneyWheel","txHash","console","info","ConfirmBetModal","onConfirm","onDismiss","tokenName","pendingTx","setPendingTx","title","fullWidth","variant","disabled","BetActions","onResult","requestedApproval","setRequestedApproval","allowance","setAllowance","fetchAllowance","getAllowance","refreshInterval","setInterval","clearInterval","useMoneyWheelAllowance","useModal","betValue","log","onPresentBetConfirmation","handleApprove","error","toNumber","BetCard","initialBetState","setBet","handleChange","evt","target","handleSelectMax","maxBet","fullBalance","useMemo","getFullDisplayBalance","toLocaleString","Cards","BaseLayout","MoneyWheel","cakeBalance","setMustSpin","setPrizeNumber","Page","spin"],"mappings":"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","file":"static/js/10.344d5a92.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery, useMoneyWheel } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n/// Je moet in het token contract het wheel contract toestemming geven om namens jou tokens uit te mogen geven.\nexport const useMoneyWheelApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const moneyWheelContract = useMoneyWheel()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, moneyWheelContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, moneyWheelContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n  name?: string\n  type?: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value, name, type }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} name={name} type={type} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 20px;\n  padding-top: 20px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(999, 'The QUACK Money Wheel')}</Title>\n        </LeftWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport { Card, CardBody, CardFooter, PancakeRoundIcon } from '@pancakeswap-libs/uikit'\nimport styled from 'styled-components'\nimport { Wheel } from 'react-custom-roulette'\n\nconst wheelOptions = [\n  { option: '50' },\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n  { option: '5' },\n\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n  { option: '10' },\n  { option: '3' },\n\n  { option: '1' },\n  { option: '5' },\n  { option: '1' },\n  { option: '20' },\n  { option: '1' },\n\n  { option: '3' },\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n  { option: '5' },\n\n  { option: '1' },\n  { option: '10' },\n  { option: '1' },\n  { option: '3' },\n  { option: '5' },\n\n  { option: '1' },\n  { option: '0' },\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n\n  { option: '5' },\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n  { option: '10' },\n\n  { option: '5' },\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n  { option: '20' },\n\n  { option: '1' },\n  { option: '3' },\n  { option: '1' },\n  { option: '5' },\n  { option: '1' },\n\n  { option: '3' },\n  { option: '1' },\n  { option: '5' },\n  { option: '1' },\n  { option: '10' },\n  { option: '3' },\n  { option: '1' },\n]\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Left = styled.div`\n  display: flex;\n`\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\ninterface WheelCardProps {\n  prizeNumber: number\n  mustSpin: boolean\n  onStopping: () => void\n}\n\nconst WheelCard: React.FC<WheelCardProps> = ({ prizeNumber, mustSpin, onStopping }) => {\n  const onPerpendicularText = true\n\n  return (\n    <Card>\n      <CardBody>\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <PancakeRoundIcon />\n            </IconWrapper>\n          </Left>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={false}>\n        <CardFooter style={{ padding: 0 }}>\n          <Wheel\n            mustStartSpinning={mustSpin}\n            prizeNumber={prizeNumber}\n            data={wheelOptions}\n            backgroundColors={['#3e3e3e', '#df3428']}\n            textColors={['#ffffff']}\n            innerRadius={25}\n            radiusLineWidth={1}\n            perpendicularText={onPerpendicularText}\n            textDistance={80}\n            onStopSpinning={onStopping}\n          />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default WheelCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from 'components/Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: (evt) => void\n  depositFeeBP?: number\n  name?: string\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  name,\n  depositFeeBP = 0,\n}) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax} name={name}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n        name={name}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React, { useMemo, useCallback, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton, Image, Heading } from '@pancakeswap-libs/uikit'\nimport { provider } from 'web3-core'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TokenInput from './TokenInput'\nimport Input, { InputProps } from '../../../components/Input'\n\nconst FlexShow = styled.div`\n  display: inline;\n  margin-bottom: 24px;\n  margin-right: 8px;\n`\n\ninterface BetInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: (evt) => void\n  depositFeeBP?: number\n  betNumber: string\n  name?: string\n}\n\nconst BetInput: React.FC<BetInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  name,\n  depositFeeBP = 0,\n  betNumber,\n}) => {\n  return (\n    <FlexShow>\n      <Heading as=\"h2\" size=\"xl\" color=\"secondary\" mb=\"24px\" style={{ textAlign: 'center' }}>\n        {betNumber}\n      </Heading>\n      <TokenInput onChange={onChange} onSelectMax={onSelectMax} value={value} max={max} symbol={symbol} name={name} />\n    </FlexShow>\n  )\n}\n\nexport default BetInput\n","import { useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { MoneyWheelBet } from 'config/constants/types'\nimport { useMoneyWheel } from './useContract'\n\nexport const placeBet = async (moneyWheelContract, bet: MoneyWheelBet, account) => {\n  const val1 = new BigNumber(bet.val1).multipliedBy(new BigNumber(10).pow(18))\n  const val3 = new BigNumber(bet.val3).multipliedBy(new BigNumber(10).pow(18))\n  const val5 = new BigNumber(bet.val5).multipliedBy(new BigNumber(10).pow(18))\n  const val10 = new BigNumber(bet.val10).multipliedBy(new BigNumber(10).pow(18))\n  const val20 = new BigNumber(bet.val20).multipliedBy(new BigNumber(10).pow(18))\n  const val50 = new BigNumber(bet.val50).multipliedBy(new BigNumber(10).pow(18))\n\n  return moneyWheelContract.methods\n    .bet(\n      val1.isNaN() ? '0' : val1.toString(),\n      val3.isNaN() ? '0' : val3.toString(),\n      val5.isNaN() ? '0' : val5.toString(),\n      val10.isNaN() ? '0' : val10.toString(),\n      val20.isNaN() ? '0' : val20.toString(),\n      val50.isNaN() ? '0' : val50.toString(),\n    )\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const getLastResult = async (moneyWheelContract, account) => {\n  return moneyWheelContract.methods.lastResult(account).call()\n}\n\nconst useBetMoneyWheel = () => {\n  const { account } = useWallet()\n  const moneyWheelContract = useMoneyWheel()\n\n  const handleBet = useCallback(\n    async (bet: MoneyWheelBet) => {\n      const txHash = await placeBet(moneyWheelContract, bet, account)\n      console.info(txHash)\n\n      const lastResult = await getLastResult(moneyWheelContract, account)\n\n      return lastResult\n    },\n    [account, moneyWheelContract],\n  )\n\n  return { onBetMoneyWheel: handleBet }\n}\n\nexport default useBetMoneyWheel\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport { MoneyWheelBet } from 'config/constants/types'\nimport useI18n from '../../../hooks/useI18n'\n\ninterface ConfirmBetModalProps {\n  betValue: number\n  onConfirm: () => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst ConfirmBetModal: React.FC<ConfirmBetModalProps> = ({ onConfirm, onDismiss, tokenName }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title=\"Are you sure you want to place your bet?\" onDismiss={onDismiss}>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default ConfirmBetModal\n","import React, { useCallback, useState } from 'react'\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useBetMoneyWheel from 'hooks/useBetMoneyWheel'\nimport { useMoneyWheelAllowance } from 'hooks/useAllowance'\nimport { useMoneyWheelApprove } from 'hooks/useApprove'\nimport { MoneyWheelBet } from 'config/constants/types'\nimport ConfirmBetModal from './ConfirmBetModal'\n\n// {\n//     \"0\": \"7\",\n//     \"1\": \"1\",\n//     \"2\": \"10000000000000000000\",\n//     \"spin\": \"7\",\n//     \"multiplier\": \"1\",\n//     \"reward\": \"10000000000000000000\"\n// }\n\ninterface BetActionsProps {\n  bet: MoneyWheelBet\n  onResult: (lastResult: any) => void\n}\n\nconst BetActions: React.FC<BetActionsProps> = ({ bet, onResult }) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useMoneyWheelApprove()\n  const allowance = useMoneyWheelAllowance()\n  const { onBetMoneyWheel } = useBetMoneyWheel()\n  const TranslateString = useI18n()\n\n  const onConfirm = async () => {\n    const lastResult = await onBetMoneyWheel(bet)\n    onResult(lastResult)\n  }\n\n  const onDismiss = () => {\n    console.log('onDismiss')\n  }\n\n  const [onPresentBetConfirmation] = useModal(\n    <ConfirmBetModal betValue={3} onConfirm={onConfirm} onDismiss={onDismiss} />,\n  )\n\n  // ToDo: check this function (commented code)\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      // onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderMoneyWheelActionButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button fullWidth disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve Money Wheel')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button fullWidth onClick={onPresentBetConfirmation}>\n          {TranslateString(999, 'Place bet')}\n        </Button>\n      </>\n    )\n  }\n  return <>{renderMoneyWheelActionButtons()}</>\n}\n\nexport default BetActions\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery, useMoneyWheel } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve MoneyWheel allowance\nexport const useMoneyWheelAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const moneyWheelContract = useMoneyWheel()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, moneyWheelContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, moneyWheelContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, Heading } from '@pancakeswap-libs/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { MoneyWheelBet } from 'config/constants/types'\nimport BetInput from './BetInput'\nimport BetActions from './BetActions'\n\ninterface BetCardProps {\n  max: BigNumber\n  tokenName?: string\n  onResult: (lastResult: any) => void\n}\n\nconst BetCard: React.FC<BetCardProps> = ({ max, tokenName = '', onResult }) => {\n  const TranslateString = useI18n()\n  const initialBetState = {\n    val1: '',\n    val3: '',\n    val5: '',\n    val10: '',\n    val20: '',\n    val50: '',\n  }\n\n  console.log('optimize me!')\n\n  const [bet, setBet] = useState(initialBetState)\n\n  const handleChange = (evt) => {\n    setBet({\n      ...bet,\n      [evt.target.name]: evt.target.value,\n    })\n  }\n\n  const handleSelectMax = (evt) => {\n    const maxBet = new BigNumber(fullBalance).toString()\n    setBet({\n      ...initialBetState,\n      [evt.target.name]: maxBet,\n    })\n  }\n\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  return (\n    <div>\n      <Heading as=\"h1\" size=\"lg\" color=\"secondary\" mb=\"50px\" style={{ textAlign: 'center' }}>\n        {fullBalance.toLocaleString()} {tokenName} {TranslateString(526, 'Available')}\n      </Heading>\n      <Flex>\n        <BetInput\n          onChange={handleChange}\n          onSelectMax={handleSelectMax}\n          value={bet.val50}\n          max={fullBalance}\n          symbol={tokenName}\n          betNumber=\"50\"\n          name=\"val50\"\n        />\n        <BetInput\n          onChange={handleChange}\n          onSelectMax={handleSelectMax}\n          value={bet.val20}\n          max={fullBalance}\n          symbol={tokenName}\n          betNumber=\"20\"\n          name=\"val20\"\n        />\n        <BetInput\n          onChange={handleChange}\n          onSelectMax={handleSelectMax}\n          value={bet.val10}\n          max={fullBalance}\n          symbol={tokenName}\n          betNumber=\"10\"\n          name=\"val10\"\n        />\n      </Flex>\n      <Flex>\n        <BetInput\n          onChange={handleChange}\n          onSelectMax={handleSelectMax}\n          value={bet.val5}\n          max={fullBalance}\n          symbol={tokenName}\n          betNumber=\"5\"\n          name=\"val5\"\n        />\n        <BetInput\n          onChange={handleChange}\n          onSelectMax={handleSelectMax}\n          value={bet.val3}\n          max={fullBalance}\n          symbol={tokenName}\n          betNumber=\"3\"\n          name=\"val3\"\n        />\n        <BetInput\n          onChange={handleChange}\n          onSelectMax={handleSelectMax}\n          value={bet.val1}\n          max={fullBalance}\n          symbol={tokenName}\n          betNumber=\"1\"\n          name=\"val1\"\n        />\n      </Flex>\n      <BetActions bet={bet} onResult={onResult} />\n    </div>\n  )\n}\n\nexport default BetCard\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport Page from 'components/layout/Page'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from '../../utils/addressHelpers'\nimport Hero from './components/Hero'\nimport WheelCard from './components/WheelCard'\nimport BetCard from './components/BetCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst MoneyWheel: React.FC = () => {\n  const cakeBalance = useTokenBalance(getCakeAddress())\n  const [mustSpin, setMustSpin] = useState(false)\n  const [prizeNumber, setPrizeNumber] = useState(0)\n\n  const onResult = (lastResult: any) => {\n    setPrizeNumber(lastResult.spin)\n    setMustSpin(true)\n  }\n\n  const onStopping = () => {\n    setMustSpin(false)\n  }\n\n  return (\n    <div>\n      <Hero />\n      <Page>\n        <Cards>\n          <div>\n            <WheelCard prizeNumber={prizeNumber} mustSpin={mustSpin} onStopping={onStopping} />\n          </div>\n          <div>\n            <BetCard max={new BigNumber(cakeBalance)} tokenName=\"QUACK\" onResult={onResult} />\n          </div>\n        </Cards>\n      </Page>\n    </div>\n  )\n}\n\nexport default MoneyWheel\n"],"sourceRoot":""}